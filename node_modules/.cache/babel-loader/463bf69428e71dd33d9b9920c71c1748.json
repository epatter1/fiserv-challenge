{"ast":null,"code":"var _jsxFileName = \"C:\\\\EJdesktop\\\\Fiserv\\\\coding-challenge\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState([]);\n\n  const fetchData = () => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      // handle success\n      const userDat = response.json();\n      console.log(userDat);\n      setUserData(userDat);\n    }).catch(err => {\n      // handle error\n      console.log(err);\n    }); // .then( {\n    //   // always executed\n    // });\n  };\n\n  useEffect(() => {\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fiserv React Coding Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), userData.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.UserID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MEi9diF6EeXMji3OmOnykM+Lnog=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/EJdesktop/Fiserv/coding-challenge/src/App.js"],"names":["useState","useEffect","axios","App","userData","setUserData","fetchData","get","then","response","userDat","json","console","log","catch","err","map","user","UserID"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAED,QAAMM,SAAS,GAAG,MAAM;AACpBJ,IAAAA,KAAK,CACLK,GADA,CACI,4CADJ,EAEAC,IAFA,CAEMC,QAAD,IAAc;AAClB;AACA,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,EAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAL,MAAAA,WAAW,CAACK,OAAD,CAAX;AACD,KAPA,EAQAI,KARA,CAQOC,GAAD,IAAS;AACd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAXA,EADoB,CAavB;AACA;AACA;AACD,GAhBA;;AAkBCd,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,SAAS;AACV,GAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASEF,QAAQ,CAACY,GAAT,CAAcC,IAAD,IAAU;AACtB,0BAAO;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA5CQf,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport {useState,useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n\r\n  const [userData, setUserData] = useState([]);\r\n\r\n const fetchData = () => {\r\n     axios\r\n    .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n    .then((response) => {\r\n      // handle success\r\n      const userDat = response.json();\r\n      console.log(userDat);\r\n      setUserData(userDat);\r\n    })\r\n    .catch((err) => {\r\n      // handle error\r\n      console.log(err);\r\n    });\r\n  // .then( {\r\n  //   // always executed\r\n  // });\r\n};\r\n  \r\n  useEffect(() => {    \r\n      fetchData()\r\n    });    \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fiserv React Coding Challenge</h1>\r\n      {/* Using component lifecycle methods or hooks */}\r\n      {/* API for posts https://jsonplaceholder.typicode.com/posts */}\r\n      {/* 1. Using the API above on init of the app make a request and load users by their userID */}\r\n      {/* 2. Make each use selectable with a button  */}\r\n      {/* 3. Be able to select any user and view only their posts */}\r\n\r\n\r\n     {userData.map((user) => {\r\n       return <p>{user.UserID}</p>\r\n     }) }\r\n\r\n      {/* API for comments https://jsonplaceholder.typicode.com/comments */}\r\n      {/* 1. Using the UserId add all the comments from this API above into state using the postId*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}