{"ast":null,"code":"var _jsxFileName = \"C:\\\\EJdesktop\\\\Fiserv\\\\coding-challenge\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchData = () => {\n  return axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(({\n    data\n  }) => {\n    // handle success\n    console.log(JSON.stringify(data));\n    return JSON.stringify(data);\n  }).catch(err => {\n    // handle error\n    console.log(err);\n  }); // .then( {\n  //   // always executed\n  // });\n};\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState();\n  useEffect(() => {\n    fetchData().then(userDat => {\n      setUserData(userData || \"No user data found\");\n      return () => {};\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fiserv React Coding Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tERHXWxgYrpKbyUdeoLOEUzdSJo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/EJdesktop/Fiserv/coding-challenge/src/App.js"],"names":["useState","useEffect","axios","fetchData","get","then","data","console","log","JSON","stringify","catch","err","App","userData","setUserData","userDat"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAOD,KAAK,CACTE,GADI,CACA,4CADA,EAEJC,IAFI,CAEC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;AACA,WAAOG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAP;AACD,GANI,EAOJK,KAPI,CAOGC,GAAD,IAAS;AACd;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,GAVI,CAAP,CADsB,CAYtB;AACA;AACA;AACD,CAfD;;AAiBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,SAAS,GAAGE,IAAZ,CAAkBW,OAAD,IAAa;AAC5BD,MAAAA,WAAW,CAACD,QAAQ,IAAI,oBAAb,CAAX;AACA,aAAO,MAAM,CAEZ,CAFD;AAGH,KALC;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA5BQD,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport {useState,useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst fetchData = () => {\r\n  return axios\r\n    .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n    .then(({ data }) => {\r\n      // handle success\r\n      console.log(JSON.stringify(data));\r\n      return JSON.stringify(data);\r\n    })\r\n    .catch((err) => {\r\n      // handle error\r\n      console.log(err);\r\n    });\r\n  // .then( {\r\n  //   // always executed\r\n  // });\r\n};\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState();\r\n  \r\n\r\n  \r\n  useEffect(() => {    \r\n      fetchData().then((userDat) => {\r\n        setUserData(userData || \"No user data found\");\r\n        return () => {\r\n      \r\n        };\r\n    });    \r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fiserv React Coding Challenge</h1>\r\n      {/* Using component lifecycle methods or hooks */}\r\n      {/* API for posts https://jsonplaceholder.typicode.com/posts */}\r\n      {/* 1. Using the API above on init of the app make a request and load users by their userID */}\r\n      {/* 2. Make each use selectable with a button  */}\r\n      {/* 3. Be able to select any user and view only their posts */}\r\n\r\n      {/* API for comments https://jsonplaceholder.typicode.com/comments */}\r\n      {/* 1. Using the UserId add all the comments from this API above into state using the postId*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}